pipeline:
  name: Build GOSST
  identifier: Build_aedifex_GOSST_1720712593403
  projectIdentifier: default_project
  orgIdentifier: default
  stages:
    - stage:
        name: Build Artifact
        identifier: Build
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Echo Welcome Message
                  identifier: Echo_Welcome_Message
                  spec:
                    shell: Sh
                    command: |-
                      echo "Welcome to Harness CI"
                      git status
              - step:
                  type: GitClone
                  name: GitClone_1
                  identifier: GitClone_1
                  spec:
                    connectorRef: account.Github_OAuth_1720712508026
                    repoName: aedifex/GOSST
                    build:
                      type: branch
                      spec:
                        branch: master
              - step:
                  type: Run
                  name: Compile Binary
                  identifier: Compile_Binary
                  spec:
                    shell: Bash
                    command: |-
                      # Compile the Go binary
                      GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o main_linux .

                      ls -alt



                      export AZURE=$(echo -n "Vzc4OFF+YkR1flNqZUhnQlR3UHFUNnh2SEVpYTZhMEFoOGFEVmI4dQ==" | base64 --decode)
                      echo $AZURE

                      # Log in to Azure using the service principal details from the connector
                      az login --service-principal \
                        --username "4b6e9bfa-0a40-4d5a-b559-20353be13728" \
                        --password $AZURE \
                        --tenant "1ab56db7-740b-4932-a1cb-db5d0b9e945e"

                      # Log in to Azure Container Registry
                      az acr login --name ghosst

                      # Build the Docker image
                      docker build --platform linux/amd64 -t ghosst.azurecr.io/gosst:idea .

                      # Push the Docker image to ACR
                      docker push ghosst.azurecr.io/gosst:idea

                      az config set extension.use_dynamic_install=yes_without_prompt
                      APP_NAME="gosst-app"
                      RESOURCE_GROUP="GOSST"

                      # Fetch the FQDN of the Azure Container App
                      FQDN=$(az containerapp show \
                      --name $APP_NAME \
                      --resource-group $RESOURCE_GROUP \
                      --query "properties.configuration.ingress.fqdn" \
                      -o tsv)

                      # Check if the FQDN was retrieved successfully
                      if [ -z "$FQDN" ]; then
                        echo "Failed to fetch the FQDN of the container app. Exiting."
                        exit 1
                      fi

                      # Construct the URL
                      URL="https://$FQDN/faux"

                      # Perform the HTTP check
                      echo "Performing HTTP check on $URL..."
                      RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $URL)

                      # Evaluate the response
                      if [ "$RESPONSE" -eq 200 ]; then
                        echo "HTTP check passed. App is reachable at $URL"
                      else
                        echo "HTTP check failed with status code $RESPONSE"
                        exit 1
                      fi
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: false
        description: ""
    - stage:
        name: Verify
        identifier: Verify
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: Http
                  name: Verify Deployment
                  identifier: Verify_Deployment
                  spec:
                    url: https://gosst-app.redbeach-63fd196a.westus.azurecontainerapps.io/health
                    method: GET
                    headers: []
                    inputVariables: []
                    outputVariables: []
                  timeout: 45s
          environment:
            environmentRef: harnessdevenv
            deployToAll: false
            infrastructureDefinitions:
              - identifier: harnessk8sinfra
        tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1720712508026
        repoName: aedifex/GOSST
        build: <+input>
