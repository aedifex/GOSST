pipeline:
  name: Build GOSST
  identifier: Build_aedifex_GOSST_1720712593403
  projectIdentifier: default_project
  orgIdentifier: default
  stages:
    - stage:
        name: Build Artifact
        identifier: Build
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone_1
                  identifier: GitClone_1
                  spec:
                    connectorRef: account.Github_OAuth_1720712508026
                    repoName: aedifex/GOSST
                    build:
                      type: branch
                      spec:
                        branch: master
              - step:
                  type: Run
                  name: Compile Binary
                  identifier: Compile_Binary
                  spec:
                    shell: Bash
                    command: |-
                      export COMMIT_SHA="<+codebase.commitSha>"

                      make build

                      make docker-build
              - step:
                  type: BuildAndPushACR
                  name: Build Image and Push to ACR
                  identifier: Build_Image_and_Push_to_ACR
                  spec:
                    connectorRef: account.Azure_Aedifex_Sandbox
                    repository: ghosst.azurecr.io/gosst
                    tags:
                      - <+pipeline.sequenceId>
                    caching: true
                  when:
                    stageStatus: Success
              - parallel:
                  - step:
                      type: Run
                      name: Update ACA
                      identifier: Update_ACA
                      spec:
                        shell: Bash
                        command: |-
                          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

                          az login --service-principal \
                            --username "8c8620e1-4387-4b91-8ef5-298b71d4d3ca" \
                            --password '<+secrets.getValue("account.Azure_Sandbox")>' \
                            --tenant "1ab56db7-740b-4932-a1cb-db5d0b9e945e"

                          az extension add --name containerapp

                          az containerapp update \
                            --name gosst-app \
                            --resource-group GOSST \
                            --image ghosst.azurecr.io/gosst:<+pipeline.sequenceId>
                      when:
                        stageStatus: Success
                  - step:
                      type: Run
                      name: Save Image as TAR
                      identifier: Save_Image_as_TAR
                      spec:
                        shell: Sh
                        command: |-
                          docker build -t gosst:<+pipeline.sequenceId> .
                          docker save -o alpine.tar gosst:<+pipeline.sequenceId>

                          tar -tvf alpine.tar | head

                          cp alpine.tar /harness/
              - step:
                  type: AquaTrivy
                  name: AquaTrivy_1
                  identifier: AquaTrivy_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: container
                      workspace: /harness/alpine.tar
                      detection: auto
                    advanced:
                      log:
                        level: info
                    privileged: true
                    image:
                      type: local_archive
                      tag: <+pipeline.sequenceId>
                      name: ghosst.azurecr.io/gosst
                  when:
                    stageStatus: Success
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: false
        description: ""
    - stage:
        name: Deploy Artifact
        identifier: Deploy_Artifact
        description: ""
        type: CI
        spec:
          cloneCodebase: false
          caching:
            enabled: false
            override: false
            paths: []
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: |-
                      cp /harness/alpine.tar .

                      ls -alt
          buildIntelligence:
            enabled: false
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1720712508026
        repoName: aedifex/GOSST
        build: <+input>
